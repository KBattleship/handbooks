<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Annotation on Quinn</title>
    <link>https://touch-star.com/tags/annotation/</link>
    <description>Recent content in Annotation on Quinn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 22 Jun 2019 15:36:27 +0800</lastBuildDate>
    
	<atom:link href="https://touch-star.com/tags/annotation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Java] 3.Java注解</title>
      <link>https://touch-star.com/post/coding/java/base/2-basis/2_3_annotations/</link>
      <pubDate>Sat, 22 Jun 2019 15:36:27 +0800</pubDate>
      
      <guid>https://touch-star.com/post/coding/java/base/2-basis/2_3_annotations/</guid>
      <description>Java注解 1.基本语法 首先是注解的声明方式如下
1 2 3 4 5 6 7 8 9 10 11 12 13  // @Target注解传入ElementType指明Nullable的作用域 @Target({ElementType.METHOD, ElementType.PARAMETER, ElementType.FIELD}) // @Retention注解用来指定其声明周期为运行时 @Retention(RetentionPolicy.RUNTIME) // @Documented指定Javadoc进行记录此对象 @Documented // @Nonnull为了告诉编译器这个域不可能为空 @Nonnull(when = When.MAYBE) // @TypeQualifierNickname为类型限定符别称(备注部分具体解释此注解) @TypeQualifierNickname public @interface Nullable { // @interface 声明注解 }   2.JDK元注解    Annotation Type Action     @Override 普通注解 用来限定子类重写父类的方法   @Deprecated 普通注解 标记已经过时的方法   @SuppressWarnings 普通注解 抑制编译器的警告   @SafeVarargs 普通注解 Java7 抑制“堆污染”警告   @FunctionalInterface 普通注解 Java8 函数式接口   @Retention 元注解 指定本修饰的注解可以保留多长时间   @Target 元注解 指定被修饰的注解能用于哪些程序元素   @Documented 元注解 被该注解修饰的注解会被javadoc工具提取成文档   @Inherited 元注解 此注解修饰的注解具有继承性   @Repeatable 元注解 重复注解，Java8的新特性    3.</description>
    </item>
    
  </channel>
</rss>